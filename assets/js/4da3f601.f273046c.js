(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[6125],{3905:function(e,t,n){"use strict";n.d(t,{Zo:function(){return u},kt:function(){return d}});var a=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=a.createContext({}),c=function(e){var t=a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},u=function(e){var t=c(e.components);return a.createElement(l.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,r=e.originalType,l=e.parentName,u=o(e,["components","mdxType","originalType","parentName"]),m=c(n),d=i,h=m["".concat(l,".").concat(d)]||m[d]||p[d]||r;return n?a.createElement(h,s(s({ref:t},u),{},{components:n})):a.createElement(h,s({ref:t},u))}));function d(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var r=n.length,s=new Array(r);s[0]=m;var o={};for(var l in t)hasOwnProperty.call(t,l)&&(o[l]=t[l]);o.originalType=e,o.mdxType="string"==typeof e?e:i,s[1]=o;for(var c=2;c<r;c++)s[c]=n[c];return a.createElement.apply(null,s)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},8391:function(e,t,n){"use strict";n.r(t),n.d(t,{frontMatter:function(){return o},contentTitle:function(){return l},metadata:function(){return c},toc:function(){return u},default:function(){return m}});var a=n(2122),i=n(9756),r=(n(7294),n(3905)),s=["components"],o={title:"GitHub Actions"},l=void 0,c={unversionedId:"bites/github-actions",id:"bites/github-actions",isDocsHomePage:!1,title:"GitHub Actions",description:"This task is complementary to the lectures and lists tasks and information for the in-lesson tasks.",source:"@site/tasks/bites/github-actions.md",sourceDirName:"bites",slug:"/bites/github-actions",permalink:"/swdt/tasks/bites/github-actions",editUrl:"https://github.com/nds-swe/swdt/edit/main/tasks/bites/github-actions.md",tags:[],version:"current",lastUpdatedBy:"dependabot[bot]",lastUpdatedAt:1636737856,formattedLastUpdatedAt:"11/12/2021",frontMatter:{title:"GitHub Actions"},sidebar:"myAutogeneratedSidebar",previous:{title:"Docker Compose",permalink:"/swdt/tasks/bites/docker-compose"},next:{title:"Health-Checking",permalink:"/swdt/tasks/bites/health-checking"}},u=[{value:"Get started",id:"get-started",children:[],level:2},{value:"Task",id:"task",children:[{value:"Create workflow",id:"create-workflow",children:[],level:3},{value:"Choose virtual machine",id:"choose-virtual-machine",children:[],level:3},{value:"Define steps",id:"define-steps",children:[],level:3}],level:2},{value:"Push",id:"push",children:[],level:2},{value:"Result",id:"result",children:[],level:2},{value:"Sample solution",id:"sample-solution",children:[],level:2}],p={toc:u};function m(e){var t=e.components,n=(0,i.Z)(e,s);return(0,r.kt)("wrapper",(0,a.Z)({},p,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("div",{className:"admonition admonition-info alert alert--info"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Metadata")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"This task is complementary to the lectures and lists tasks and information for the in-lesson tasks."))),(0,r.kt)("h2",{id:"get-started"},"Get started"),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Clone the example project")),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git clone --branch 1.1.0 https://github.com/nds-swe/jinder.git \\\n&& cd jinder\n\n# or in case you already got the project\ngit checkout 1.1.0\n")),(0,r.kt)("h2",{id:"task"},"Task"),(0,r.kt)("div",{className:"admonition admonition-note alert alert--secondary"},(0,r.kt)("div",{parentName:"div",className:"admonition-heading"},(0,r.kt)("h5",{parentName:"div"},(0,r.kt)("span",{parentName:"h5",className:"admonition-icon"},(0,r.kt)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},(0,r.kt)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.3 5.69a.942.942 0 0 1-.28-.7c0-.28.09-.52.28-.7.19-.18.42-.28.7-.28.28 0 .52.09.7.28.18.19.28.42.28.7 0 .28-.09.52-.28.7a1 1 0 0 1-.7.3c-.28 0-.52-.11-.7-.3zM8 7.99c-.02-.25-.11-.48-.31-.69-.2-.19-.42-.3-.69-.31H6c-.27.02-.48.13-.69.31-.2.2-.3.44-.31.69h1v3c.02.27.11.5.31.69.2.2.42.31.69.31h1c.27 0 .48-.11.69-.31.2-.19.3-.42.31-.69H8V7.98v.01zM7 2.3c-3.14 0-5.7 2.54-5.7 5.68 0 3.14 2.56 5.7 5.7 5.7s5.7-2.55 5.7-5.7c0-3.15-2.56-5.69-5.7-5.69v.01zM7 .98c3.86 0 7 3.14 7 7s-3.14 7-7 7-7-3.12-7-7 3.14-7 7-7z"}))),"Task")),(0,r.kt)("div",{parentName:"div",className:"admonition-content"},(0,r.kt)("p",{parentName:"div"},"Run tests on ",(0,r.kt)("inlineCode",{parentName:"p"},"pull_request")," against ",(0,r.kt)("inlineCode",{parentName:"p"},"main"),"."))),(0,r.kt)("h3",{id:"create-workflow"},"Create workflow"),(0,r.kt)("p",null,"Note: In case the file exists, ",(0,r.kt)("inlineCode",{parentName:"p"},"git checkout 1.1.0"),"."),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title=".github/workflows/test_push.yml"',title:'".github/workflows/test_push.yml"'},"name: Unit Test\non:\n  pull_request:\n")),(0,r.kt)("p",null,"This will ",(0,r.kt)("em",{parentName:"p"},"declaratively"),"  state which steps should run on which machine when a ",(0,r.kt)("inlineCode",{parentName:"p"},"pull_request")," is created. The syntax is ",(0,r.kt)("a",{parentName:"p",href:"https://yaml.org/"},"YML"),"."),(0,r.kt)("h3",{id:"choose-virtual-machine"},"Choose virtual machine"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title=".github/workflows/test_push.yml"',title:'".github/workflows/test_push.yml"'},"...\njobs:\n  test:\n    runs-on: ubuntu-latest\n")),(0,r.kt)("p",null,"This gives you an empty virtual ubuntu machine. There is nothing on it and as long as your project is open-source, it should also stay free."),(0,r.kt)("h3",{id:"define-steps"},"Define steps"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-yml",metastring:'title=".github/workflows/test_push.yml"',title:'".github/workflows/test_push.yml"'},"...\n    steps:\n      - uses: actions/checkout@v2\n      - uses: actions/setup-java@v1\n        with:\n          java-version: 11\n      - name: Run tests\n        run: ./gradlew test\n")),(0,r.kt)("p",null,"Tell the VM what to do."),(0,r.kt)("ol",null,(0,r.kt)("li",{parentName:"ol"},"Checkout the latest code (basically git clone)"),(0,r.kt)("li",{parentName:"ol"},"Setup Java on the VM (its empty remember)"),(0,r.kt)("li",{parentName:"ol"},"Run gradle tests")),(0,r.kt)("p",null,(0,r.kt)("strong",{parentName:"p"},"That is it!")),(0,r.kt)("h2",{id:"push"},"Push"),(0,r.kt)("p",null,"Push this action on a new branch!"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-bash"},"git checkout -b mambax/first-flow\ngit add .\ngit commit -m \"Added my first flow\"\ngit push -u origin head\n--\x3e Then press the link in the terminal\ne.g.\nremote: Create a pull request for 'mambax/first-flow' on GitHub by visiting:\nremote:      https://github.com/nds-swe/spring-starter/pull/new/mambax/first-flow <-- link\n")),(0,r.kt)("h2",{id:"result"},"Result"),(0,r.kt)("p",null,"This action will now always verify, if the code you just wrote passes the Unit Tests. Always."),(0,r.kt)("h2",{id:"sample-solution"},"Sample solution"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"https://github.com/nds-swe/jinder/blob/2.0.1/.github/workflows/test_push.yml"},"Here"),"."),(0,r.kt)("p",null,"The sample uses two approaches. One using a separate community action that caches some artifacts and one ",(0,r.kt)("em",{parentName:"p"},"bare"),", directly using ",(0,r.kt)("inlineCode",{parentName:"p"},"gradlew"),"."))}m.isMDXComponent=!0}}]);